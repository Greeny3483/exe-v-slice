import flixel.FlxG;
import flixel.math.FlxBasePoint;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxTimer;
import flixel.text.FlxText;
import flixel.text.FlxTextBorderStyle;
import flixel.FlxCamera;
import funkin.audio.FunkinSound;
import funkin.Conductor;
import funkin.graphics.FunkinSprite;
import funkin.modding.module.ScriptedModule;
import funkin.modding.events.ScriptEvent;
import funkin.modding.events.ScriptEventDispatcher;
import funkin.util.ReflectUtil;
import funkin.Paths;
import funkin.play.PlayState;
import funkin.play.stage.Stage;
import funkin.play.stage.Bopper;
import funkin.play.stage.StageProp;
import funkin.data.stage.StageRegistry;
import funkin.play.character.CharacterType;
import funkin.play.character.BaseCharacter;
import funkin.play.character.CharacterDataParser;
import funkin.play.song.Song;
import flixel.FlxSprite;
import haxe.Json;
import funkin.play.notes.Strumline;
import funkin.play.notes.StrumlineNote;
import flixel.math.FlxMath;
import flixel.math.FlxPoint;
import funkin.modding.module.ModuleHandler;

// Faker is 2nd favorite EXE song.

class BarrenHill extends Stage
{
    var staticScreen:FunkinSprite;
	var staticLooping:Bool = false;
	var staticLoopSound:FunkinSound = null;
	var staticLoopTimer:FlxTimer = null;
	var blackOverlay:FunkinSprite;

	public function new()
	{
		super('barrenHill');
	}

	override function onCreate(event:ScriptEvent):Void
	{
		super.onCreate(event);

		game = PlayState.instance;

		enableStatic = ModuleHandler.getModule("EXEOptions").scriptGet("screenstatic");

		if (enableStatic) {
			staticScreen = FunkinSprite.create(100, 0);
            staticScreen.frames = Paths.getSparrowAtlas('daSTAT');
            staticScreen.animation.addByPrefix('static', 'staticFLASH', 30, false); // Single burst
            staticScreen.animation.addByPrefix('staticinf', 'staticFLASH', 30, true); // Infinite loop
            staticScreen.animation.play('static');
			staticScreen.scale.set(5, 5);
            staticScreen.zIndex = 5000;
			staticScreen.cameras = [game.camHUD];
			game.add(staticScreen);
			staticScreen.visible = false;

			staticScreen.animation.finishCallback = function() {
                staticScreen.visible = false;
            };

		}

		blackOverlay = FunkinSprite.create(0, 0, 'blackness'); // Make graphics are strange, so I just did this.
		blackOverlay.alpha = 1;
		blackOverlay.scale.set(5, 5);
        blackOverlay.cameras = [game.camCutscene];
		blackOverlay.scrollFactor.set(0, 0);
		blackOverlay.visible = false;
		game.add(blackOverlay);

	}

	function doStatic():Void {
		if (!enableStatic) return;
		staticScreen.visible = true;
		staticScreen.animation.play('static');
		var staticScreenSound = FunkinSound.playOnce(Paths.sound("staticBUZZ"), 0.6);
		FlxTween.tween(staticScreenSound, { volume: 0 }, 1, {
			onComplete: function(tween:FlxTween) {
				staticScreenSound.stop();
			}
		});
	}

	override function buildStage()
	{
		super.buildStage();
	}

	function onStepHit(event:SongTimeScriptEvent):Void
	{
		if (event.step == 768)
		{
			var hudElements = [
				game.opponentStrumline, 
				game.playerStrumline, 
				game.scoreText, 
				game.healthBar, 
				game.healthBarBG, 
				game.iconP1, 
				game.iconP2
			];

			for (element in hudElements)
			{
				if (element != null)
				{
					FlxTween.tween(element, { alpha: 0 }, 3, { ease: FlxEase.quadOut });
				}
			}
		}
		if ((event.step == 800 || event.step == 809 || event.step == 815 || event.step == 824 || event.step == 828 || event.step == 832 || event.step == 836 || event.step == 840 || event.step == 844 || event.step == 848) && enableStatic)
		{
			doStatic();		
		}
		if (event.step == 856 && enableStatic)
		{
			doStatic();
			staticScreen.animation.play('staticinf');
			FunkinSound.playOnce(Paths.sound("staticBUZZ"), 0.6);
			// Couldn't get the sound to loop so it just plays once.
		}
		if (event.step == 883 && enableStatic)
		{
			blackOverlay.visible = true;
		}
	}
}
