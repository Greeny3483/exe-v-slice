import funkin.play.character.SparrowCharacter;
import funkin.play.character.CharacterType;
import funkin.play.character.BaseCharacter;
import funkin.play.PlayState;
import funkin.Paths;
import funkin.util.Constants;

import flixel.FlxG;
import flixel.FlxSprite;
import flixel.ui.FlxBar;
//import flixel.util.FlxColor;
import flixel.addons.transition.FlxTransitionableState;
import flixel.addons.transition.Transition;
import funkin.Preferences;

class FatalErrorGlitched extends SparrowCharacter {

    function new(){
        super('true-fatal');
    }

    function onNoteIncoming(ev){
        if ((!ev.note.noteData.getMustHitNote() && characterType == CharacterType.DAD) /*|| (ev.note.noteData.getMustHitNote() && characterType == CharacterType.BF)*/){
            ev.note.frames = Paths.getSparrowAtlas('fatalNote');

            ev.note.animation.addByPrefix('greenScroll', 'noteUp');
            ev.note.animation.addByPrefix('blueScroll', 'noteDown');
            ev.note.animation.addByPrefix('purpleScroll', 'noteLeft');
            ev.note.animation.addByPrefix('redScroll', 'noteRight');

            ev.note.offset.set(-2.5, -30);

            //for opp notes
            if (characterType == CharacterType.DAD){
                switch(ev.note.noteData.data){
                    case 4:
                        ev.note.animation.play('purpleScroll');
                    case 5:
                        ev.note.animation.play('blueScroll');
                    case 6:
                        ev.note.animation.play('greenScroll');
                    case 7:
                        ev.note.animation.play('redScroll');   
                }
            }
        }
    }
}